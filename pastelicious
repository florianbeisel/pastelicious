#!/usr/bin/env perl

BEGIN { use FindBin; use lib "$FindBin::Bin/mojo/lib" }

use Mojolicious::Lite;
use Mojo::ByteStream;
use Mojo::JSON;
use Digest::SHA1 ();
use File::Basename;

my @LANGUAGES  = (qw/Perl C Bash/);
my $PASTES_DIR = 'pastes';

my $config = {server => 'cgi'};

my $json = Mojo::JSON->new;
$config =
  {%$config, %{$json->decode(_slurp_file("${\(basename $0)}.conf")) || {}}};
die $json->error if !$config && $json->error;

# Additional Perl modules
if ($config->{perl5lib}) {
    unshift @INC, $_
      for (
        ref $config->{perl5lib} eq 'ARRAY'
        ? @{$config->{perl5lib}}
        : $config->{perl5lib});
}

app->renderer->types->type(html => 'text/html; charset=utf-8');
app->renderer->add_helper(get_last_pastes => sub { _get_last_pastes($_[0]); }
);
app->renderer->add_helper(get_languages => sub {@LANGUAGES});

get '/' => sub {
    my $self = shift;

    $self->render(error => {}, paste => '', metadata => {});
} => 'index';

post '/' => sub {
    my $self = shift;

    my $paste = $self->param('paste');
    $self->stash(paste => '');

    unless ($paste) {
        $self->stash(error => {paste => 'Paste is required'});
        $self->render;
        return;
    }

    my $encoded_paste = Mojo::ByteStream->new($paste)->encode('utf-8');

    my $id = Digest::SHA1::sha1_hex($encoded_paste);
    my ($head, $tail) = ($id =~ m/^(..)(.*)$/);

    my $metadata = '';
    foreach my $key (qw/author private lang/) {
        if (my $value = $self->param($key)) {
            $metadata .= "${\(uc $key)}: $value\n";
        }
    }
    $metadata .= "\n" if $metadata;

    my $dir = $self->app->home->rel_dir($PASTES_DIR);
    mkdir $dir unless -d $dir;
    mkdir "$dir/$head" unless -d "$dir/$head";

    open FILE, ">:encoding(UTF-8)", "$dir/$head/$tail";
    print FILE $metadata;
    print FILE $paste;
    close FILE;

    # If paste is not private, save it to the public list
    unless ($self->param('private')) {
        open FILE, ">>:encoding(UTF-8)", "$dir/public";
        print FILE "$head/$tail\n";
        close FILE;
    }

    $self->redirect_to('view', id => $id);
} => 'index';

get '/source' => sub {
    my $self = shift;

    $self->stash(rendered => 1);
    $self->app->static->serve($self, '../' . basename($0));
} => 'source';

get '/:id' => sub {
    my $self = shift;

    my $id = $self->stash('id');
    my ($head, $tail) = ($id =~ m/^(..)(.*)$/);

    $self->stash(error => {});

    my $dir = $self->app->home->rel_dir($PASTES_DIR);
    my $file = "$dir/$head/$tail";
    unless (-e $file) {
        $self->app->static->serve_404($self);
        $self->stash(rendered => 1);
        return;
    }

    my $paste = _slurp_file($file);

    my $metadata = _parse_metadata(\$paste);

    $self->render(paste => $paste, metadata => $metadata);
} => 'view';

get '/:id/delete' => \&_delete_paste => 'delete';

sub _delete_paste {
    my $self = shift;

    my $id = $self->stash('id');
    my ($head, $tail) = ($id =~ m/^(..)(.*)$/);

    my $dir = $self->app->home->rel_dir($PASTES_DIR);
    my $file = "$dir/$head/$tail";
    unless (-e $file) {
        $self->app->static->serve_404($self);
        $self->stash(rendered => 1);
        return;
    }

    my $paste = _slurp_file($file);
    my $metadata = _parse_metadata(\$paste);

    if ($metadata->{private}) {
        unlink $file;

        opendir DIR, "$dir/$head";
        my @files = grep {!/^\./} readdir DIR;
        closedir DIR;

        # Delete directory if this paste was the last one
        rmdir "$dir/$head" unless @files;

        $self->redirect_to('index');
    }
    else {
        $self->res->code(403);
        $self->render('forbidden');
    }
}

sub _slurp_file {
    my $file = shift;

    open FILE, "<:encoding(UTF-8)", $file or return '';
    my $content = do { local $/; <FILE> };
    close FILE;

    return $content;
}

sub _get_last_pastes {
    my $self = shift;

    my $dir = $self->app->home->rel_dir($PASTES_DIR);

    my $pastes = _slurp_file("$dir/public");

    my @files = map {s{\/}{}; $_} reverse split("\n", $pastes);

    # We want only last 10 pastes
    $#files = 9 if $#files > 9;

    return @files;
}

sub _parse_metadata {
    my $string = shift;

    $$string =~ s/^((.*?)(?:\n\n|\n\r\n\r|\r\r))//s;
    return {} unless $2;

    my $original = $1;
    my $data     = $2;

    my $metadata = {};
    while ($data =~ s/^(.*?):\s*(.*?)(?:\n|\n\r|\r|$)//s) {
        my $key   = lc $1;
        my $value = $2;

        $metadata->{$key} = $value;
    }

    unless (%$metadata) {
        $$string = $original . $$string;
    }

    return $metadata;
}

shagadelic(@ARGV ? @ARGV : $config->{server});
__DATA__

@@ index.html.ep
% layout 'wrapper';

@@ view.raw.ep
<%== $paste %>

@@ view.html.ep
% layout 'wrapper';
        <script type="text/javascript" src="/highlight/highlight.pack.js"></script>
        <script type="text/javascript">
            hljs.initHighlightingOnLoad();
        </script>
Link: <a href="<%= url_for->to_abs %>"><%= url_for->to_abs %></a>
% if ($metadata->{private}) {
(<a href="<%= url_for delete => id => $id %>">delete</a>)
% }
<br />
% if (my $author = $metadata->{author}) {
Author: <%= $author %><br />
% }
% my $class = 'txt';
Private: <%= $metadata->{private} ? "Yes" : "No" %><br />
% if (my $lang = $metadata->{lang}) {
Language: <%= $lang %><br />
% $class = lc $lang;
% }
<pre>
<code class="<%= $class %>">
% my @paste = split("\n", $paste); my $count = 1;
% foreach my $line (@paste) {
<%= $count++ %> <%== $line %>
% }
</code>
</pre>

@@ forbidden.html.ep
<!doctype html><html>
    <head><title>Forbidden</title></head>
    <body><h2>Forbidden</h2></body>
</html>

@@ layouts/wrapper.html.ep
<!doctype html>
<html>
    <head>
        <title>Paste</title>
        <link rel="stylesheet" title="GitHub" href="/highlight/styles/github.css">
    </head>
    <body>
        <a href="<%= url_for 'index' %>">new paste</a>
        <a href="<%= url_for 'source' %>">source code</a>
        <hr />

        <div style="float:left;padding-right:2em;width:10%">
        Last pastes:
        <ol>
%       foreach my $id (get_last_pastes) {
        <li><a href="<%= url_for view => id => $id %>"><%= substr($id, 0, 10) %>...</a></li>
%       }
        </ol>
        </div>
        <div style="float:right;width:80%">
        <%== content %>

        <hr />

        <form method="post" action="/">
        <table>
        <tr><td>Author:</td><td><input type="text" name="author" value="<%= $metadata->{author} || $self->tx->remote_address %>" /></td></tr>
        <tr><td>Private:</td><td><input type="checkbox" name="private" <%= 'checked="checked"' if $metadata->{private} %>/> (Won't appear in last pastes and can be deleted)</td></tr>
        <tr><td>Language:</td><td><select name="lang">
%       foreach my $lang (get_languages) {
        <option value="<%= $lang %>"><%= $lang %></option>
%       }
        </select>
        </td></tr>
        <tr><td></td><td>
        <textarea name="paste" cols="80" rows="20"><%= $paste %></textarea>
%       if ($error->{paste}) {
        <div style="color:red"><%= $error->{paste} %></div>
%       }
        </td></tr>
        <tr><td></td><td><input type="submit" value="Paste!" /> <input type="reset" value="Clear"></td></tr>
        </table>
        </form>
        </div>
    </body>
</html>
