#!/usr/bin/env perl

# Copyright (C) 2010, Viacheslav Tykhanovskyi

BEGIN { use FindBin; use lib "$FindBin::Bin/mojo/lib" }

use Mojolicious::Lite;
use Mojo::ByteStream;
use Mojo::JSON;
use Digest::SHA1 ();
use File::Basename;

my $config = plugin json_config => {default => {server => 'cgi'}};

my @LANGUAGES  = (qw/Perl C Bash/);
my $PASTES_DIR = 'pastes';

# Additional Perl modules
if ($config->{perl5lib}) {
    unshift @INC, $_
      for (
        ref $config->{perl5lib} eq 'ARRAY'
        ? @{$config->{perl5lib}}
        : $config->{perl5lib});
}

_load_plugins();

app->renderer->types->type(html => 'text/html; charset=utf-8');
app->renderer->types->type(raw  => 'text/plain; charset=utf-8');

app->renderer->add_helper(get_last_pastes => sub { _get_last_pastes($_[0]) });
app->renderer->add_helper(get_languages   => sub {@LANGUAGES});

get '/' => sub {
    my $self = shift;

    $self->render(error => {}, paste => '', metadata => {});
} => 'index';

post '/' => {error => {}, metadata => {}} => sub {
    my $self = shift;

    my $paste = $self->param('paste');
    $self->stash(paste => '');

    unless ($paste) {
        $self->stash(error => {paste => 'Paste is required'});
        $self->render;
        return;
    }

    my $encoded_paste = Mojo::ByteStream->new($paste)->encode('utf-8');

    my $id = Digest::SHA1::sha1_hex($encoded_paste);
    my ($head, $tail) = ($id =~ m/^(..)(.*)$/);

    my $metadata = '';
    foreach my $key (qw/author private lang/) {
        if (my $value = $self->param($key)) {
            $metadata .= "${\(uc $key)}: $value\n";
        }
    }
    $metadata .= "\n" if $metadata;

    my $dir = $self->app->home->rel_dir($PASTES_DIR);
    mkdir $dir unless -d $dir;
    mkdir "$dir/$head" unless -d "$dir/$head";

    open FILE, ">:encoding(UTF-8)", "$dir/$head/$tail";
    print FILE $metadata;
    print FILE $paste;
    close FILE;

    # If paste is not private, save it to the public list
    unless ($self->param('private')) {
        open FILE, ">>:encoding(UTF-8)", "$dir/public";
        print FILE "$head/$tail\n";
        close FILE;
    }

    $self->redirect_to('view', id => $id);
} => 'index';

get '/source' => sub {
    my $self = shift;

    $self->stash(rendered => 1);
    $self->render_static('../' . basename($0));
} => 'source';

get '/rest' => sub {
    my $self = shift;

    $self->render_json({foo => 'bar'});
};

get '/:id' => sub {
    my $self = shift;

    my $id = $self->stash('id');
    my ($head, $tail) = ($id =~ m/^(..)(.*)$/);

    $self->stash(error => {});

    my $dir = $self->app->home->rel_dir($PASTES_DIR);
    my $file = "$dir/$head/$tail";
    unless (-e $file) {
        $self->app->static->serve_404($self);
        $self->stash(rendered => 1);
        return;
    }

    my $paste = _slurp_file($file);

    my $metadata = _parse_metadata(\$paste);

    my $format = $self->stash('format');

    if ($format) {
        if ($format eq 'json') {
            $self->render_json({%$metadata, paste => $paste});
        }
        elsif ($format eq 'raw') {
            $self->render_text($paste);
        }
    }
    else {
        $self->render(paste => $paste, metadata => $metadata);
    }
} => 'view';

get '/:id/delete' => \&_delete_paste => 'delete';

sub _delete_paste {
    my $self = shift;

    my $id = $self->stash('id');
    my ($head, $tail) = ($id =~ m/^(..)(.*)$/);

    my $dir = $self->app->home->rel_dir($PASTES_DIR);
    my $file = "$dir/$head/$tail";
    unless (-e $file) {
        $self->app->static->serve_404($self);
        $self->stash(rendered => 1);
        return;
    }

    my $paste = _slurp_file($file);
    my $metadata = _parse_metadata(\$paste);

    if ($metadata->{private}) {
        unlink $file;

        opendir DIR, "$dir/$head";
        my @files = grep {!/^\./} readdir DIR;
        closedir DIR;

        # Delete directory if this paste was the last one
        rmdir "$dir/$head" unless @files;

        $self->redirect_to('index');
    }
    else {
        $self->res->code(403);
        $self->render('forbidden');
    }
}

sub _slurp_file {
    my $file = shift;

    open FILE, "<:encoding(UTF-8)", $file or return '';
    my $content = do { local $/; <FILE> };
    close FILE;

    return $content;
}

sub _get_last_pastes {
    my $self = shift;

    my $dir = $self->app->home->rel_dir($PASTES_DIR);

    my $pastes = _slurp_file("$dir/public");

    my @files = map {s{\/}{}; $_} reverse split("\n", $pastes);

    # We want only last 10 pastes
    $#files = 9 if $#files > 9;

    return @files;
}

sub _parse_metadata {
    my $string = shift;

    $$string =~ s/^((.*?)(?:\n\n|\n\r\n\r|\r\r))//s;
    return {} unless $2;

    my $original = $1;
    my $data     = $2;

    my $metadata = {};
    while ($data =~ s/^(.*?):\s*(.*?)(?:\n|\n\r|\r|$)//s) {
        my $key   = lc $1;
        my $value = $2;

        $metadata->{$key} = $value;
    }

    unless (%$metadata) {
        $$string = $original . $$string;
    }

    return $metadata;
}

sub _load_plugins {
    my $plugins_arrayref = shift;

    my $lib_dir = app->home->rel_dir('lib');
    push @INC, $lib_dir;

    my @plugins;

    my $prev;
    while (my $plugin = shift @{$config->{plugins}}) {
        if (ref($plugin) eq 'HASH') {
            next unless $plugins[-1];

            $plugins[-1]->{args} = $plugin;
        }
        else {
            push @plugins, {name => $plugin, args => {}};
        }
    }

    push @{app->plugins->namespaces}, $_ for @{$config->{plugins_namespaces}};
    push @{app->plugins->namespaces}, 'Pastelicious::Plugin';

    foreach my $plugin (@plugins) {
        plugin($plugin->{name} => $plugin->{args});
    }
}

shagadelic(@ARGV ? @ARGV : $config->{server});

__DATA__

@@ index.html.ep
% layout 'wrapper';

@@ view.html.ep
% layout 'wrapper';
<table width="100%">
% if (my $author = $metadata->{author}) {
<tr>
<td class="label">Author:</td><td><%= $author %></td>
</tr>
% }
<tr>
<td class="label">Private:</td>
<td><%= $metadata->{private} ? "Yes" : "No" %></td>
</tr>
% my $class = 'txt';
% if (my $lang = $metadata->{lang}) {
<tr>
<td class="label">Language:</td>
<td><%= $lang %></td>
</tr>
% $class = lc $lang;
% }
<tr><td class="label">Formats:</td>
<td>
<a href="<%= url_for->to_abs %>">html</a> 
<a href="<%= url_for(format => 'raw')->to_abs %>">raw</a>
<a href="<%= url_for(format => 'json')->to_abs %>">json</a>
% if ($metadata->{private}) {
(<a href="<%= url_for delete => id => $id %>">delete</a>)
% }
</td></tr>
</table>
<br />

% my @paste = split("\n", $paste); my $total = @paste;
<div class="content">
<div style="float:left;text-align:right">
<pre class="lines"><code><%== "$_\n" for 1 .. $total %></code></pre>
</div>
<div class="float:right">
<pre><code class="<%= $class %>"><%= $paste %></code></pre>
</div>
<div class="clear"></div>
</div>
<br />

@@ forbidden.html.ep
<!doctype html><html>
    <head><title>Forbidden</title></head>
    <body><h2>Forbidden</h2></body>
</html>

@@ layouts/wrapper.html.ep
<!doctype html>
<html>
    <head>
        <title>Paste</title>
        <style type="text/css">
            html, body {height: 100%}
            body {background: #fff;font-family: "Helvetica Neue", Arial, Helvetica, sans-serif;}
            h1,h2,h3,h4,h5 {font-family: times, "Times New Roman", times-roman, georgia, serif; line-height: 40px; letter-spacing: -1px; color: #444; margin: 0 0 0 0; padding: 0 0 0 0; font-weight: 100;}
            a,a:active {color:#555}
            a:hover{color:#000}
            a:visited{color:#000}
            img{border:0px}
            pre{padding:0.5em;overflow:auto;overflow-y:visible;width:600px;}
            pre.lines{border:0px;padding-right:0.5em;width:50px}
            #body {width:700px;min-height:100%;height:auto !important;height:100%;margin:0 auto -6em;}
            #header {text-align:center;padding:0em 0em 2em 0em;}
            .content {background:#eee;border:2px solid #ccc;width:700px}
            .created, .modified {color:#999;margin-left:10px;font-size:small;font-style:italic;padding-bottom:0.5em}
            .modified {margin:0px}
            .label{text-align:right;vertical-align:top;width:1%}
            .center{text-align:center}
            .error {padding:2em;text-align:center}
            #footer{width:75%;margin:auto;font-size:80%;text-align:center;padding:2em 0em 2em 0em;height:2em;}
            .push {height:6em}
            .clear {clear:both}
        </style>
    </head>
    <body>
    <div id="body">
        <div id="header">
            <a href="<%= url_for 'index' %>">new paste</a>
            <a href="<%= url_for 'source' %>">source code</a>
        </div>

        <%== content %>

        <form method="post" action="/">
        <table width="100%">
        <tr><td class="label">Author:</td><td><input type="text" name="author" value="<%= $metadata->{author} || $self->tx->remote_address %>" /></td></tr>
        <tr><td class="label">Private:</td><td><input type="checkbox" name="private" <%= 'checked="checked"' if $metadata->{private} %>/> (Won't appear in last pastes and can be deleted)</td></tr>
        <tr><td class="label">Language:</td><td><select name="lang">
%       foreach my $lang (get_languages) {
        <option value="<%= $lang %>"><%= $lang %></option>
%       }
        </select>
        </td></tr>
        <tr><td></td><td>
        <textarea name="paste" cols="80" rows="20"><%= $paste %></textarea>
%       if ($error->{paste}) {
        <div style="color:red"><%= $error->{paste} %></div>
%       }
        </td></tr>
        <tr><td></td><td><input type="submit" value="Paste!" /> <input type="reset" value="Clear"></td></tr>
        </form>

        <tr><td><br /></td><td></td></tr>
        <tr>
        <td class="label">Last pastes:</td>
        <td>
%       foreach my $id (get_last_pastes) {
        <a href="<%= url_for view => id => $id %>"><%= $id %></a><br />
%       }
        </td>
        </tr>
        </table>

        <div class="push"></div>
        </div>

        <div class="clear">


        <div id="footer">Powered by <a href="http://github.com/vti/pastelicious">Pastelicious!</a></div>
    </body>
</html>
